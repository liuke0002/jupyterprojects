浅拷贝是对一个对象的顶层拷贝，通俗的理解就是拷贝了i引用，并没有拷贝内容

完成浅拷贝 copy.copy()
完成深拷贝 copy.deepcopy()

a=[1,2]
b=a
c=copy.deepcopy(a)
id(c) id会发生变化较a和b
a.append(3)

print结果
a=[1,2,3]
b=[1,2,3]
c=[1,2]

b = a ，赋值引用，a 和 b 都指向同一个对象。
浅拷贝，是一个对象的顶层拷贝，下面这个例子当a和b的内容发生变化时，d的内容也跟着会变化，但是c.append()新的元素不会导致d发生变化 元组不可拷贝，元组是不可变类型，意味数据不可修改，所以不可拷贝，如果是元组就指向它
深拷贝， e是由深拷贝出来的对象，他里面的a和b完全拷贝了父对象及其子对象，e和c两者是完全独立的。

如果用copy.copy/copy.deepcopy对一个全部都是不可变类型的数据进行拷贝，那么他们结果相同，都是引用指向
如果拷贝的是一个拥有可变类型数据，即使元组是最顶层，那么深拷贝和浅拷贝的id是不一样的
In [22]: a=[1,2]
In [23]: b=[3,4]
In [24]: c=[a,b]
In [25]: d=copy.copy(c)
In [26]: id(c)
Out[26]: 2076092856712
In [27]: id(d)
Out[27]: 2076091670408
In [28]: id(a)
Out[28]: 2076092543176
In [29]: id(d[0])
Out[29]: 2076092543176
In [30]: id(c[0])
Out[30]: 2076092543176
In [31]: d=copy.deepcopy(c)

拷贝的其他形式
a=[1,2]
b=[:] 浅拷贝

字典中的copy方法可以拷贝一个字典
d=dict(name="zhangsan",age=27)
co=d.copy()  浅拷贝









